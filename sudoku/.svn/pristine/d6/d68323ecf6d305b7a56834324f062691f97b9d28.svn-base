package sudoku;

import java.util.Optional;
import java.util.Set;

class Main {

  public static void main(String[] args) {
    Board b = new Board();

    b = b.set("41", 8);
    b = b.set("51", 4);

    b = b.set("12", 3);
    b = b.set("72", 6);

    b = b.set("33", 8);

    b = b.set("24", 1);
    b = b.set("54", 8);
    b = b.set("84", 4);

    b = b.set("25", 9);
    b = b.set("45", 6);
    b = b.set("65", 2);
    b = b.set("85", 1);

    b = b.set("26", 5);
    b = b.set("86", 9);

    b = b.set("77", 2);

    b = b.set("38", 6);
    b = b.set("78", 8);
    b = b.set("98", 7);

    b = b.set("59", 1);
    b = b.set("89", 5);

    b = init(b, Constraint.getConstraints());
    System.out.println(solve(b, Constraint.getConstraints()));
  }

  public static boolean isAssigned(Board b, String name) {
    return false;
  }

  public static boolean isSolved(Board b) {
    return false;
  }

  public static int getAssignment(Board b, String name) {
    return 0;
  }

  public static Set<String> getAssigned(Board b) {
    return null;
  }

  public static Set<String> getConnected(String name, Set<Constraint> cs) {
    return null;
  }

  public static Board forwardCheck(Board b, String name, Set<Constraint> cs) {
    return null;
  }

  public static Optional<String> findBestVar(Board b) {
    return Optional.empty();
  }

  public static Optional<Board> solve(Board b, Set<Constraint> cs) {
    return Optional.empty();
  }

  public static Board init(Board b, Set<Constraint> cs) {
    return null;
  }

}
