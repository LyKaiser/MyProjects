package jpp.qrcode.encode;

import jpp.qrcode.*;

public class MaskSelector {

	public static void placeFormatInformation(boolean[][] res, int formatInformation) {
		FormatInformation form =FormatInformation.fromBits(formatInformation);
		ErrorCorrection error = form.errorCorrection();
		MaskPattern mask =form.maskPattern();
		MaskFunction fkt =mask.maskFunction();


		throw new IllegalStateException();
	}
	
	public static int calculatePenaltySameColored(boolean[][] data) {
		throw new IllegalStateException();
	}
	
	public static int calculatePenalty2x2(boolean[][] arr) {
		throw new IllegalStateException();
	}
	
	public static int calculatePenaltyBlackWhite(boolean[][] arr) {
		throw new IllegalStateException();
	}
	
	public static int calculatePenaltyPattern(boolean[][] array) {
		throw new IllegalStateException();
	}
	
	public static int calculatePenaltyFor(boolean[][] data) {
		throw new IllegalStateException();
	}
	
	public static MaskPattern maskWithBestMask(boolean[][] data, ErrorCorrection correction, ReservedModulesMask modulesMask) {
		throw new IllegalStateException();
	}
}
