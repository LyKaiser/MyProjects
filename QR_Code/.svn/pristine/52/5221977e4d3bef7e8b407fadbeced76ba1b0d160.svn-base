package jpp.qrcode.io;

import java.io.*;
import java.util.ArrayList;
import java.util.List;

public class TextReader {

    public static boolean[][] read(InputStream in) throws IOException {
        if (in == null) {
            throw new IOException();
        }

        InputStreamReader isr = new InputStreamReader(in);
        BufferedReader bu = new BufferedReader(isr);
        String zeile;
        //List<String> li = new ArrayList<>();
        StringBuilder sb = new StringBuilder();


        while ((zeile = bu.readLine()) != null) {
            for (int a = 1; a < zeile.length(); a++) {
                if (String.valueOf(zeile.charAt(a)).equals("#")) {
                    bu.close();
                } else if (String.valueOf(zeile.charAt(a)).equals(" ")) {
                    break;
                } else if (String.valueOf(zeile.charAt(a)).equals("1")) {
                    sb.append("1");
                } else if (String.valueOf(zeile.charAt(a)).equals("0")) {
                    sb.append("0");
                }
            }
            bu.close();
        }
        String str = sb.toString();
        boolean[][] qrCode = new boolean[(int) Math.pow(str.length(), 2)][(int) Math.pow(str.length(), 2)];
        int counter = 0;
        for (int i = 0; i < qrCode.length; i++) {
            for (int j = 0; j < qrCode[i].length; j++) {
                if (String.valueOf(str.charAt(counter)).equals("1")) {
                    counter++;
                    qrCode[i][j] = true;
                }
                if (String.valueOf(str.charAt(counter)).equals("0")) {
                    counter++;
                    qrCode[i][j] = false;
                }
            }
        }
        return qrCode;
    }
}


            /*String s = String.valueOf(zeile.charAt(i));
            if (s.equals("1") || s.equals("0")) {
                li.add(zeile);
                bu.close();
            }else if (s.equals("#")){
                bu.close();
            }

            if (zeile.startsWith("1") || zeile.startsWith("0")) {
                li.add(zeile);
                bu.close();
            } else if (zeile.startsWith("#")) {
                bu.close();
            } else if (zeile.startsWith(" ")){
                for (int a=1; a<zeile.length();a++){
                    if (String.valueOf(zeile.charAt(i)).equals("1")||String.valueOf(zeile.charAt(i)).equals("0")){
                        li.add(zeile);
                    }
                }
            } else{
                throw new IOException();
            }
        }


        int l = li.size();
        boolean[][] qrCode = new boolean[l][l];
        int j = 0;
        for (
                String str : li) {
            for (int i = 0; i < str.length(); i++) {
                if (str.charAt(i) == 1) {
                    qrCode[j][i] = true;
                    j++;
                } else if (str.charAt(i) == 0) {
                    qrCode[j][i] = false;
                    j++;
                } else break;
            }
        }
        return qrCode;
    }

}


        String s = sb.toString();


        byte[] alle = in.readAllBytes();

        int counter = 0;
        for (byte b : alle) {
            if (b == 1 || b == 0) {
                counter += 1;
            }
        }
        boolean[] sortiert = new boolean[counter];

        int j = 0;
        for (int i = 0; i < sortiert.length; i++) {
            if (alle[i] == 1) {
                sortiert[j] = true;
                j += 1;
            } else if (alle[j] == 0) {
                sortiert[j] = false;
                j += 1;
            }
        }
        boolean[][] qrCode = new boolean[(int) Math.pow(counter, 2)][(int) Math.pow(counter, 2)];
        int c = 0;
        for (int a = 0; a < qrCode.length; a++) {
            for (int b = 0; b < qrCode[0].length; b++) {
                qrCode[a][b] = sortiert[c];
                c += 1;
            }
        }
        return qrCode;

    }
}*/