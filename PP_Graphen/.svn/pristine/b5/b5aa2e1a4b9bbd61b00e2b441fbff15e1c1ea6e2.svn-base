package de.jpp.algorithm;

import de.jpp.algorithm.interfaces.EstimationFunction;
import de.jpp.model.TwoDimGraph;
import de.jpp.model.XYNode;
import de.jpp.model.interfaces.Edge;
import de.jpp.model.interfaces.Graph;
import de.jpp.model.interfaces.WeightedGraph;


public class AStarSearch<N, A, G extends WeightedGraph<N, A>> extends BreadthFirstSearchTemplate<N, A, G> implements EstimationFunction {

    N dest;
    public AStarSearch(G graph, N start, N dest) {
        super(graph, start);
        this.dest=dest;
    }

    @Override
    public NodeInformation<N, A> getNodeInformation(Edge<N, A> edge, A anno) {
        return null;
    }

    @Override
    public void openIfShorter(N node, NodeInformation<N, A> info) {

    }

    @Override
    public double getEstimatedDistance(Object node, Object destination) {
        return 0;
    }
}
